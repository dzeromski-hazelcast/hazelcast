name: gcp-test
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'hazelcast/src/main/java/com/hazelcast/gcp/**'
      - '.github/terraform/gcp/**'

jobs:
  build:
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    if: github.repository_owner == 'hazelcast'
    strategy:
      matrix:
        java: [ '8' ]
        architecture: [ 'x64' ]
        distribution: [ 'adopt' ]
    steps:
      # SET UP JDK
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          architecture: ${{ matrix.architecture }}
          distribution: ${{ matrix.distribution }}

      - run: java -version

      # BUILD HAZELCAST GCP SNAPSHOT
      - uses: actions/checkout@v2.4.0
        with:
          path: hazelcast

      - name: Build hazelcast jar
        run: |
          cd hazelcast
          mvn clean install -DskipTests -Dcheckstyle.skip
          echo "Hazelcast jar is: " hazelcast/target/hazelcast-*-SNAPSHOT.jar
          cp hazelcast/target/hazelcast-*-SNAPSHOT.jar ~/hazelcast.jar

      # INSTALL TERRAFORM
      - name : Set-up Terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 1.1.8

      - name: Terraform Init
        working-directory: hazelcast/.github/terraform/gcp
        run: terraform init

      - name: Terraform Apply
        working-directory: hazelcast/.github/terraform/gcp
        env:
          GCP_KEY_FILE: ${{ secrets.GCP_KEY_FILE }}
        run: |
          echo $GCP_KEY_FILE | base64 --decode > gcp_key_file.json
          wc -c gcp_key_file.json
          terraform apply -var="hazelcast_mancenter_version=latest-snapshot" -var="hazelcast_path=~/hazelcast.jar" -var="gcp_key_file=gcp_key_file.json" -auto-approve

      - name: Terraform Destroy
        if: ${{ always() }}
        working-directory: hazelcast/.github/terraform/gcp
        run: terraform destroy -auto-approve